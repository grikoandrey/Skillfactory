Исполнитель: Грико Андрей, поток: FPW_151
Итоговое задание 6.7.1 (HW-03) в рамках курса Fullstack разработчик на Python.
Итог: Итоговое задание этого модуля заключается в создании этого приложения.
Задание:  
1. Добавьте подписки на рассылки о новых материалах в категориях:
    - страница должна быть доступна по адресу https://127.0.0.1:8000/subscriptions/;
    - должна быть создана модель Subscriber для хранения подписок пользователей;
    - при публикации новости все подписчики должны получить сообщение на почту со ссылкой на страницу для прочтения новости (используйте для этого сигнал m2m_changed).
2. Реализуйте отправку списка статей на почту подписчиков категорий каждую неделю на основе той же модели Subscriber:
    - подключите приложение django_apscheduler;
    - добавьте команду запуска периодических задач;
    - настройте периодическую задачу отправки списка статей каждую пятницу в 18:00;
    - составьте сообщение со ссылками на статьи;
    - сообщение должно содержать только статьи, которые появились с момента предыдущей рассылки.
При разработке лучше всего использовать вывод отправляемых писем в консоль ('django.core.mail.backends.console.EmailBackend').
Реализовано дополнительно:
- добавлено поле Subscriber в модель Subscriber для хранения последней даты отправки, чтобы ранее отправленные сообщения фильтровались. Поэтому при повторной отправке, если не было новых писем, список будет пуст.
- не полностью реализовано уведомление о регистрации в приложении через аккаунт соц. сетей, админам приходит, пользователю нет, хотя применен общий сигнал (данной задачи в модуле не было).
- При еженедельной расслыке фильтруются письма, только на подписанные категории (данного примера в модуле не было).
- !!!!!!!! в рассылке активно повторение через 5 секунд, закомментировано учебное задание (по пятницам в 18-00, при необходимости включается).
- !!!!!!!! в рассылке уменьшен период отбора постов (вместо 7 указан 1) иначе был слишком большой список.
----------------------------------------------------------------------------------------------------------
Архив:
Итоговое задание 5.8.1 (HW-03) в рамках курса Fullstack разработчик на Python.
Итог: Итоговое задание этого модуля заключается в создании этого приложения.
Задание:  
1. Добавьте форму регистрации на сайте с возможностью зарегистрироваться с помощью почты и пароля или через Yandex-аккаунт. Для этого используйте пакет django-allauth. После того как пользователь войдёт, его должно перенаправить на страницу с новостями.
2. Настройте проверки у представлений создания и редактирования новостей и статей. Создайте группу authors, выдайте ей права на создание и изменение новых записей в разделах «Статьи» и «Новости».
3. Проверьте работу прав.
Реализовао дополнительно:
- регистрация через Google, telegram. Регистрация через все сторонние аккаунты проверена.
- В группу authors, с правами на создание и изменение новых записей в разделах «Статьи» и «Новости», попадают пользователи зарегистрированные только через Соц. сети, остальные являются только Пользователями (временно права такие же как у просто посетителей сайта). Но, думаю, в последствии они получат права на оценку статей и новостей.
- Реализация прав проверена. Возможности содания новостей и статей, изменение доступно только пользователям группы authors.
- ID, ключи и токены не загружены в репозиторий в целях безопасности, но подгружаются через переменные среды.
- Дополнительно в шаблон меню выведено ия пользователя (в целях удобства) и кнопка выхода из личного кабинета.
- Изменение постов доступно только их авторам. Удаление постов не доступно никому.

Итоговое задание 4.7 (HW-03)
Фильтры и пагинация
        Добавьте постраничный вывод на /news/, чтобы на одной странице было не больше 10 новостей и видны номера лишь ближайших страниц, а также возможность перехода к первой или последней странице.
        Добавьте страницу /news/search. На ней должна быть реализована возможность искать новости по определённым критериям. Критерии должны быть следующие:
                по названию;
                по категории; (в отличие от первоначального задания, у меня категории изначально заданы на выбор для пользователя, поэтому решение несколько отличается)
                позже указываемой даты. Дополительно реализован поиск ранее указываемой даты.
        Убедитесь, что можно выполнить фильтрацию сразу по нескольким критериям.
        Для вывода поля фильтрации по датам вам может понадобиться указать специальный тип в HTML.
        Сложность в том, что форма за нас генерируется с помощью django-filter. Нам нужно сообщить ей о том, что мы хотим видеть на сайте календарь для выбора даты и времени. Браузер сможет отобразить автоматически сам интерфейс календаря (от нас не требуется его верстать). Для решения задачи правильного вывода формы нам поможет более сложная настройка класса с описанием фильтров.
        Вам необходимо изучить информацию по следующим ссылкам и постараться реализовать выбор даты:
                Посмотрите, как указан фильтр name.
                Вам потребуется дополнительно указать правильный тип поля формы в атрибуте widget. Пример можно посмотреть по ссылке.
Создание, редактирование и удаление объектов
Запрограммируйте страницы создания, редактирования и удаления новостей и статей. Предлагаем вам расположить страницы по следующим ссылкам:
        /news/create/
        /news/<int:pk>/edit/
        /news/<int:pk>/delete/
        /articles/create/
        /articles/<int:pk>/edit/
        /articles/<int:pk>/delete/ данная страница не реализована осознанно, так как удалется объект, не зависимо от типа (новость или статья)
Если вы немного запутались, ввиду того, что модель у нас одна, а страницы под создание статей и новостей должны быть отдельно, то прочитайте подсказку.
При этом не бойтесь сначала поискать информацию в интернете и пробовать разные подходы к решению задачи!
Дополнительно: реализована акутализация шаблона и активация кнопок с дополнительными функция в рамках создания, изменения и удаления постов. Прошу прощения за наборы букв в постах, для тестирования и скорости =)
Действия: загружена папка 'NewsPaper' с комплектом файлов

    Итоговое задание 3.6 (HW-03)
    В ходе работы с модулем вы должны были выполнить следующие задания:
        - Создать новую страницу с адресом /news/, на которой должен выводиться список всех новостей.
        - Вывести все статьи в виде заголовка, даты публикации и первых 20 символов текста.
        - Новости должны выводиться в порядке от более свежей к самой старой.
        - Сделать отдельную страницу для полной информации о статье /news/<id новости>.
          На этой странице должна быть вся информация о статье. Название, текст и дата загрузки в формате день.месяц.год.
        - Написать собственный фильтр censor, который заменяет буквы нежелательных слов в заголовках и текстах статей на символ «*».
        - Все новые страницы должны использовать шаблон default.html как основу.
