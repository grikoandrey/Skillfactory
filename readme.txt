Исполнитель: Грико Андрей, поток: FPW_151
Проект: разработка Telegram-бота для Московского зоопарка (PJ) в рамках курса Fullstack разработчик на Python.
Задача:
    Ваша задача — разработать Telegram-бота для популяризации программы опеки. Это должен быть бот-викторина, помогающий пользователю подобрать животное.
По задумке заказчика бот позволит, с одной стороны — создать дополнительный формат развлечения для Telegram-канала зоопарка, а с другой — рассказать посетителям канала о программе опеки. Зоопарк надеется привлечь внимание взрослых работающих людей, которые любят животных и захотят стать опекунами.
    Тема викторины — «Какое у вас тотемное животное?». Вопросы могут быть с долей юмора, но должны основываться на реальных фактах и историях об обитателях зоопарка. Каждое животное в зоопарке обладает какими-то классными особенностями, по которым можно составить вопросы. Конечно, в викторину можно добавить и общие вопросы, например, «Где вы хотели бы жить?» или «Какая у вас любимая еда?».
    В списке материалов в конце этого урока есть ссылка на сайт и Telegram-канал зоопарка, где можно найти информацию о животных. Также в материалах приложен пример проекта, который сотрудники зоопарка готовили к новогодним праздникам.

Вам предстоит:

1. Проанализировать, как лучше собрать бота.
2. Составить вопросы и варианты ответов к ним, предположить результат прохождения — какое животное бот покажет по итогу той или иной сборки ответов.
3. Продумать, что пользователь увидит в конце викторины. Это может быть, например, картинка с подписью «Твоё тотемное животное в Московском зоопарке – дикобраз» или «Да ты дикобраз!». Со стороны заказчика нет ограничений по формату, можете использовать любые варианты: стикеры, мини-видео и т.д.
4. Продумать, как рассказать пользователю о программе опеки. Это может быть, например, отдельный блок информации под кнопкой «узнать больше» в конце викторины или мини-интро, появляющееся сразу вместе с результатом. В этом вопросе от заказчика тоже нет ограничений.

Технические требования
Бот должен соответствовать следующим требованиям:

1. Поддержка платформы — бот разработан для платформы Telegram. Для создания бота необходимо с помощью BotFather в Telegram получить бот-токен. Бот-токен используется для аутентификации в дальнейшей разработке приложения.
2. Взаимодействие с пользователем — бот легко запускается с помощью одной команды или нажатия кнопки, при запуске приветствует пользователя и проводит его через всю викторину. Бот способен общаться с пользователем в дружелюбной, увлекательной манере.
3. Модуль викторины — бот оснащён модулем для проведения викторины, состоящей из вопросов с несколькими вариантами ответов. Вопросы и ответы можно легко настроить, обновить и дополнить.
4. Алгоритм обработки ответов — бот содержит алгоритм, способный назначать животных на основе ответов пользователя. Это может быть, например, «взвешивание» ответов и использование системы баллов для определения итогового результата викторины.
5. Подведение результатов — в конце викторины бот генерирует персонализированное сообщение с описанием подходящего животного и в каком-то формате рассказывает о программе опеки. Вы можете придумать любой механизм, как сообщить пользователю о программе.
6. Работа с изображениями — бот способен создавать или предоставлять готовое изображение или стикер с животным пользователя.
7. Поддержка социальных сетей — результатами викторины (текстом, изображением или стикером) легко поделиться в популярных социальных сетях. При этом в рекламных целях результат публикуется со встроенной ссылкой на бота.
8. Контактный механизм — в боте есть возможность легко связаться с сотрудником зоопарка для получения дополнительной информации. При этом сотруднику пересылается результат прохождения викторины, чтобы он мог лучше ответить на вопросы. Для демонстрации этой функции можно использовать свои контактные данные (почту, номер телефона и т.п.).
9. Возможность перезапуска — бот предлагает пользователю перезапустить викторину с помощью кнопки «Попробовать ещё раз?».
10. Механизм обратной связи — бот может собирать отзывы пользователей для дальнейшего совершенствования.
11. Конфиденциальность и безопасность данных — бот соблюдает правила конфиденциальности данных и собирает только те данные, которые необходимы для его работы. В нём также есть механизмы защиты данных от несанкционированного доступа.
12. Масштабируемость — бот спроектирован таким образом, чтобы работать и в случае увеличения количества пользователей. То есть бот сможет без проблем справиться с ростом количества взаимодействий.
13. Мониторинг производительности — бот отслеживает производительность и регистрирует ошибки, чтобы обеспечить бесперебойную работу и устранение неполадок.
14. Сопровождение пользователя — бот предоставляет чёткие инструкции и справочные сообщения, чтобы направлять пользователя в процессе взаимодействия. У пользователя не должно возникать трудностей во время прохождения викторины и публикации результатов, все шаги должны быть простыми и понятными.

Реализовано: --------------------------------------------------------------------------------!!!!!!!!!!!!!!
- создано три файла: запуск бота - app2.py (основной) в нем реализовано непосредственно создание бота и его работа с пользователем, Quiz2.py (викторина) реализована логика викторины, tree.py (вспомогательный) в данном файле находятся сообщения для бота, вспомогательные функции для работы с данными из файлов, отправка почты
- гененрация производьных приветствий из списка
- ограничение ввода сообщений пользователем для исключения сбой работы бота (реагирует на команды из меню, слова: привет, отзыв (сообщение начинается со слова Отзыв и отправляется на рабочую почту), подтверждаю (отправка информации сотруднику после результатов викторины)
- текст, фото, сведения о животных беруться из соответствующих файлов, стуктура папок важна.
- в консоль выводятся служебные сообщения для отслеживания работы бота
- также важна структура информации о животных и вопросов с ответами викторины внутри самих файлов
- из общего числа животных зоопарка выбраны основные и оценены по следующим критериям - просто -> земля - вода - воздух: 1  2  3, - мелкое - среднее - крупное: 1  2  3, - травоядное -> хищник: 1  2  3, - безобидно -> опасно: 1  2  3, экзотично :  1  2  3 и занесены в базу (файл tree2.py) = (1.5, 1, 2, 3, 3): 'змея', (2, 3, 3, 3, 3): 'крокодил', (2.5, 2, 1, 1, 1): 'черепаха', (3, 1, 1, 1, 2): 'бабочка', (3, 2, 3, 2, 2): 'орел', (2, 2, 1, 1, 1): 'утка', (3, 2, 1, 1, 2): 'попугай', (3, 2, 2, 2, 3): 'сова', (1, 2, 1, 2, 2): 'обезьяна', (1, 3, 1, 2, 3): 'жираф', (1, 1, 2, 1, 1): 'еж', (1, 2, 3, 3, 2): 'волк', (1, 3, 3, 3, 3): 'барс', (1, 1, 3, 2, 1): 'лиса'.
- задаются 10 вопросов парами (1-6), (2-7), (3-8), (4-9), (5-10) соответствующих критериям по порядку. Берется среднее между двумя вопросами для большей объективности и затем сравнивается с базовыми значениями. Животное определяется по максимальному приближению или совпадению.
- на основе выбранного животного, вся информация о нем выбирается из файлов.
- отправка результатов викторины сотруднику с разрешения пользователя
- при получении результата, им можно поделиться с информацией о боте в рекламных целях
- с каждым вопросом в чат выводится информационное сообщение о программе опекунства
- бот реализован без асинхронности, потому что данной темы нет в курсе, а создание бота начато чуть раньше, чем об этом стало известно. Данный вебинар запрошен у школы
- на почту данные отправляются с полным имененм и идентификатором пользователя, со всеми вопросами и его ответами, подсчитанными результатами, выбранным животным и сведениями о животном
- часть требований не реализована...
---------------------------------------------------------------------------------------------------------------------------------
Критерии оценивания:
Возможные баллы за каждый критерий от 0 до 5, где:
    0 баллов — работа не соответствует критерию,
    2 балла — работа соответствует критерию частично или выполнена с ошибками,
    5 баллов — работа соответствует критерию и выполнена без ошибок.
Список критериев:
    Запуск бота
    Взаимодействие с пользователем
    Модуль викторины
    Алгоритм обработки ответов
    Подведение результатов
    Работа с изображениями
    Поддержка социальных сетей
    Контактный механизм
    Возможность перезапуска
    Механизм обратной связи
    Конфиденциальность и безопасность данных
    Масштабируемость
    Мониторинг производительности
    Сопровождение пользователя
    Креативность и уникальность
Всего за задание можно набрать 75 баллов, для успешного выполнения нужно минимум 40 баллов.
